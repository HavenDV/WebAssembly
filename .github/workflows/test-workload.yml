name: Test workload reusable workflow

on:
  workflow_call:
    inputs:
      template:
        required: true
        type: string
      path:
        type: string
      source:
        type: string

jobs:
  test-workload:
    strategy:
      matrix:
        os: [macos, ubuntu, windows]
        dotnet: [
          { version: 8.0.x, quality: ga }
        ]
        
    name: ${{ matrix.os }}/${{ matrix.dotnet.version }}/${{ matrix.dotnet.quality }}/${{ inputs.source == '' && 'nuget' || 'local' }}
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: "Checkout"
        if: inputs.source != ''
        uses: actions/checkout@v4

      - name: "Setup dotnet"
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet.version }}
          dotnet-quality: ${{ matrix.dotnet.quality }}

      - name: "Setup MSBuild"
        if: matrix.os == 'windows'
        uses: microsoft/setup-msbuild@v1.1

      - name: "Build local packages"
        if: inputs.source != ''
        run: dotnet build ${{ inputs.path }} --configuration Release

      - name: "Download workload-install on Windows"
        if: matrix.os == 'windows'
        run: Invoke-WebRequest 'https://raw.githubusercontent.com/${{ github.repository }}/main/scripts/workload-install.ps1' -OutFile 'workload-install.ps1'
      - name: "Install workload from local packages on Windows"
        if: inputs.source != '' && matrix.os == 'windows'
        run: ./workload-install.ps1 -s ${{ inputs.source }}
      - name: "Install workload from NuGet on Windows"
        if: inputs.source == '' && matrix.os == 'windows'
        run: ./workload-install.ps1

      - name: "Install workload from local packages on Linux/macOS"
        if: inputs.source != '' && matrix.os != 'windows'
        run: curl -sSL https://raw.githubusercontent.com/${{ github.repository }}/main/scripts/workload-install.sh | bash -s -- -s ${{ inputs.source }}
      - name: "Install workload from NuGet on Linux/macOS"
        if: inputs.source == '' && matrix.os != 'windows'
        run: curl -sSL https://raw.githubusercontent.com/${{ github.repository }}/main/scripts/workload-install.sh | sudo bash

      - name: "Create new project from template"
        run: dotnet new ${{ inputs.template }} --output test

      - name: "Build new project using dotnet"
        run: dotnet build test /p:EmitCompilerGeneratedFiles=true

      - name: "Upload dotnet build artifacts"
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-build-artifacts
          path: test/**/*.*

      - name: "Create new project from template to test MSBuild"
        if: matrix.os == 'windows'
        run: dotnet new ${{ inputs.template }} --output test_msbuild

      - name: "Build new project using MSBuild"
        if: matrix.os == 'windows'
        run: msbuild /restore test_msbuild /p:EmitCompilerGeneratedFiles=true

      - name: "Upload MSBuild artifacts"
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: msbuild-artifacts
          path: test_msbuild/**/*.*